CQS Requirements


Team Members


John Steltzner
Colton Judy


Purpose
    
The Customer Queuing System(CQS) is designed to help stores minimize checkout traffic by utilizing queuing systems for available registers and self-checkouts.
The CQS will be run through a kiosk implemented within the store. The system will be configured to the available checkout POSs specific to each store, taking the
types of POSs, acceptable payment, and if it is an express checkout into account. The CQS will take in input from individual customers, and the input will be 
used in the system to direct them to the most desirable POS to meet their needs. The system will also make recommendations for the second-best desirable POS 
should all the most desirable POSs be full, and store staff will be made aware that more registers/self-checkouts may need to be available to accommodate 
customer traffic. Details of checkout information can be collected after the kiosk closes for the store day. 


Requirements


1. Name: configure_registers
Type: functional
Summary:  Store manager or company designated associate shall declare the number of registers the queuing system will account for. These registers will have cashiers. The statuses of the registers shall be processed by the queuing system. 


2. Name: configure_SCOs
Type: functional
Summary: Store manager or company designated associate shall declare the number of self-checkout POSs the queuing system will account for. The statuses of the registers shall be processed by the queuing system.


3. Name: add_POS
Type: functional
Summary: Shall add POS to the list of POSs alongside the payment type, checkout type, and if the POS is an express lane.


4. Name: add_customer_info
Type: functional
Summary: Shall ask customers how they are paying, if they would like a cashier or checkout by themself, and if they are expressly viable. This customer information shall be grouped together and utilized by other functions. 


5. Name: check_POS
Type: functional
Summary: Shall take into account all the open POSs and prioritize these POSs first. Delayed POSs shall be taken into account if and only if all other open POSs are full. Shall ignore closed POSs. Checks the available open POSs and finds the best match to the current customer. 


6. Name: declare_best_POS
Type: functional
Summary: Shall set the best POS in place for the customer from the checked POSs based on the given input from the immediate customer. 


7. Name: direct_customer
Type: functional
Summary: Shall display the POS that meets the customer’s needs and instruct them to go to that POS.


8. Name: recommend_next_best_POS
Type: functional 
Summary:  Should display a secondary POS with single change to customer’s needs if every POS that matches customer’s needs is full.


9. Name: alert_associates
Type: functional
Summary: Should signal store associates with notification that more registers or SCOs may need to be opened to accommodate customer needs.


10. Name: collect_stats
Type: functional
Summary: Should display the stats for how many paid cash, paid card, went to SCO, went to cashier, and shopped express.


11. Name: platform_os
Type: constraint
Summary: The target platform operating system is Windows 10 or above. 


12. Name: kiosk_platform_os
Type: constraint
Summary: The kiosks integrated within the store will be capable of running Windows 10 or above.


13. Name: development_framework
Type: constraint
Summary: This project will be developed using C# and the WPF Framework.


14. Name: POS_connection
Type: constraint
Summary: The client will be able to integrate the software into the POS terminals.


15. Name: CQS_setup
Type: constraint
Summary: The project will be designed in such a way that the store manager will be able to set up the system at the kiosk with limited technical knowledge.


16. Name: kiosk_runtime
Type: constraint
Summary: The kiosk will not be required to run throughout the entire day. The primary focus is the middle of the day and other times where there are rushes and high customer activity.


17. Name: customer_respondwell
Type: risk
Summary: The customer should respond well to the new system.


18. Name: project_development_time
Type: risk
Summary: The project should be fully developed and implementable by April 22, 2024.
